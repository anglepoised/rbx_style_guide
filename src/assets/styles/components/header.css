/** @define Header; use strict */

/**
 * The `.Header` component should be used across all products. It consists of:
 *
 * - A mandatory logo
 * - An optional `.Navigation` subcomponent
 * - An optional `.User` subcomponent
 */

:root {
    --Header-background: var(--colour-gray-tuna);
    --Header-border-colour: var(--colour-brand-green);
    --Header-colour: var(--colour-gray-ghost);
    --Header-user-width: 2em;
}

/**
 * 1. Set explicit foreground colour
 * 2. Linearize layout for small viewport
 * 3. Allow absolute positioning of `.Header-user` child
 * 4. Set global gutter (not set on parent container to avoid breaking `.Navigation.is-active` state)
 * 5. Nudge down for fake centring and matching of `.Header-user`
 * 6. Reset stacking order for `.User` subcomponent
 * 7. Horizontal layout for medium+ viewports
 * 8. Match design rhythm with consistent height
 * 9. Stop other subcomponents flowing into `.Header-user` subcomponent, using child width + (2 * gutter).
 *    To spec, but triggers this parser bug at W3C CSS Validator: https://www.w3.org/Bugs/Public/show_bug.cgi?id=18913
 * 10. Kill margin and switch to flex layout for vertical centering of content
 */

.Header {
    background: var(--Header-background);
    border-bottom: 0.25em solid var(--Header-border-colour);
    color: var(--Header-colour); /* 1 */
    display: flex;
    flex-direction: column; /* 2 */
    position: relative; /* 3 */
}

.Header-logo {
    cursor: pointer;
    margin: 0 var(--layout-gutter); /* 4 */
    margin-top: 0.5em; /* 5 */
}

.Header-user {
    position: absolute;
    right: var(--layout-gutter);
    top: 2px;
    width: var(--Header-user-width);
    z-index: 0; /* 6 */
}

@media (--md-viewport) {

    .Header {
        flex-direction: row; /* 7 */
        min-height: 4.5em; /* 8 */
        padding-right: calc(var(--Header-user-width) + (2 * var(--layout-gutter))); /* 9 */
    }

    .Header-logo {
        display: flex;
        flex-direction: column; /* 10 */
        justify-content: center; /* 10 */
        margin-top: 0; /* 10 */
    }

    .Header-user {
        top: 20px;
    }

}
