/**
 * TODO: Icon variants. Hopefully a single `.Button--icon`, but might need an additional class for icon with no text.
 */

/** @define Button; use strict */

:root {
    --Button-background-hover: var(--colour-blue-hover);
    --Button-background-shadow: var(--colour-blue-shadow);
    --Button-background: var(--colour-blue-base);
    --Button-border-radius: 4px;
    --Button-box-shadow: inset 0px -3px 0px 0px;
    --Button-color: var(--colour-white-alabaster);
    --Button-disabled-opacity: 0.5;
    --Button-font: inherit;
    --Button-padding: 0.34375em 0.3125em;
}

/**
 * The button classes are best applied to links, buttons, and submit inputs.
 * These components can be used in forms, as calls to action, or as part of the
 * general UI of the site/app.
 */

/**
 * 1. Corrects inability to style clickable `input` types in iOS.
 * 2. Hide back face for transition.
 * 3. Normalize `line-height`. For `input`, it can't be changed from `normal` in Firefox 4+.
 * 4. Ensure no `text-decoration` on anchors.
 * 5. Prevent button text from being selectable.
 * 6. Make sure `input` will wrap text across multiple lines.
 */

.Button {
    -webkit-appearance: none; /* 1 */
    backface-visibility: hidden; /* 2 */
    background-color: var(--Button-background);
    border-radius: var(--Button-border-radius);
    border-style: none;
    border-width: 0;
    box-shadow: var(--Button-box-shadow) var(--Button-background-shadow);
    color: var(--Button-color);
    cursor: pointer;
    display: inline-block;
    font: var(--Button-font);
    line-height: normal; /* 3 */
    margin: 0;
    padding: var(--Button-padding);
    position: relative;
    text-align: center;
    text-decoration: none; /* 4 */
    transition-duration: 0.3s;
    transition-property: background-color;
    user-select: none; /* 5 */
    white-space: normal; /* 6 */
}

/**
 * Work around a Firefox/IE bug where the transparent `button` background
 * results in a loss of the default `button` focus styles.
 */

.Button:focus {
    outline: 1px dotted;
    outline: 5px auto -webkit-focus-ring-color;
}

/**
 * Restore default Firefox focus style, but add *outside* element (as opposed to
  the default inside, which looks poor with RBX button style).
 */

.Button:-moz-focusring {
    outline: 1px dotted #212121;
}

/**
 * UI states
 *
 * 1. Prevent link :hover styles change colour
 * 2. Prevent link :hover styles change text-decoration
 * 3. Remove outline on :hover (but preserve for :focus)
 */

.Button:hover,
.Button:focus {
    background-color: var(--Button-background-hover);
    color: var(--Button-color); /* 1 */
    text-decoration: none; /* 2 */
}

.Button:hover {
    outline: none; /* 3 */
}

.Button:active,
.Button.is-pressed {
    background-color: var(--Button-background-shadow);
}

.Button:disabled,
.Button.is-disabled {
    background: var(--Button-background);
    cursor: default;
    opacity: var(--Button-disabled-opacity);
}

/**
 * Large variant
 */

:root {
    --Button--large-font-size: var(--font-size-large);
    --Button--large-padding: 0.527777778em 0.4166665em;
}

.Button--large {
    font-size: var(--Button--large-font-size);
    padding: var(--Button--large-padding);
}

/**
 * Green variant
 */

:root {
    --Button--green-background-hover: var(--colour-green-hover);
    --Button--green-background-shadow: var(--colour-green-shadow);
    --Button--green-background: var(--colour-green-base);
}

.Button--green {
    background-color: var(--Button--green-background);
    box-shadow: var(--Button-box-shadow) var(--Button--green-background-shadow);
}

.Button--green:hover,
.Button--green:focus {
    background-color: var(--Button--green-background-hover);
}

.Button--green:active,
.Button--green.is-pressed {
    background-color: var(--Button--green-background-shadow);
}

.Button--green:disabled,
.Button--green.is-disabled {
    background-color: var(--Button--green-background);
}

/**
 * Orange variant
 */

:root {
    --Button--orange-background-hover: var(--colour-orange-hover);
    --Button--orange-background-shadow: var(--colour-orange-shadow);
    --Button--orange-background: var(--colour-orange-base);
}

.Button--orange {
    background-color: var(--Button--orange-background);
    box-shadow: var(--Button-box-shadow) var(--Button--orange-background-shadow);
}

.Button--orange:hover,
.Button--orange:focus {
    background-color: var(--Button--orange-background-hover);
}

.Button--orange:active,
.Button--orange.is-pressed {
    background-color: var(--Button--orange-background-shadow);
}

.Button--orange:disabled,
.Button--orange.is-disabled {
    background-color: var(--Button--orange-background);
}

/**
 * Red variant
 */

:root {
    --Button--red-background-hover: var(--colour-red-hover);
    --Button--red-background-shadow: var(--colour-red-shadow);
    --Button--red-background: var(--colour-red-base);
}

.Button--red {
    background-color: var(--Button--red-background);
    box-shadow: var(--Button-box-shadow) var(--Button--red-background-shadow);
}

.Button--red:hover,
.Button--red:focus {
    background-color: var(--Button--red-background-hover);
}

.Button--red:active,
.Button--red.is-pressed {
    background-color: var(--Button--red-background-shadow);
}

.Button--red:disabled,
.Button--red.is-disabled {
    background-color: var(--Button--red-background);
}
